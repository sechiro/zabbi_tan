//------------------------------------------------------------------------------
//OnTranslateイベント（ゴースト「はろーYAYAわーるど」より転載）（省略可）
//------------------------------------------------------------------------------
//もっとも単純な例。語尾変え（「。」→「にゅ。」）。
//（コメントアウト中）
/*
OnTranslate
{
	_text = reference[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/

//------------------------------------------------------------------------------
//OnTranslateInternalイベント（ゴースト「はろーYAYAわーるど」より転載）（省略可）
//------------------------------------------------------------------------------
//OnTranslateがYAYA→本体→YAYAと、一度本体を経由するのに対して、
//OnTranslateInternalはYAYA内部でのトランスレートです。
//そのため、reference変数などが変更されない状態でこの関数に渡されます。
//引数は、_argv[0]が、本体に渡す寸前のトークの内容です。
//（コメントアウト中）
/*
OnTranslateInternal
{
	_text = _argv[0]
	_text = REPLACE(_text, "。", "にゅ。")
	_text
}
*/

//---------------------------------------------------------
//選択肢
//---------------------------------------------------------

//選択肢ジャンプ
OnChoiceSelect
{
	_id = reference[0]
	if ISFUNC(_id) {
		EVAL(_id)
	}
}
OnChoiceSelectEx
{
	_id = reference[0]
	if ISFUNC(_id) {
		EVAL(_id)
	}
}
//アンカージャンプ
OnAnchorSelect
{
	_id = reference[0]
	//アンカーのIDの冒頭に「http://〜」があればWebサイトを開く。
	//これを入れておくとRSS表示時に記事タイトルクリックでURLジャンプできます。
	if RE_MATCH(_id, 'http://.+') {
		_url = AYATEMPLATE.EscapeText(_id)
		"\C\j[%(_url)] \e"
	//それ以外はIDと同じ名前のイベントへジャンプ
	} elseif ISFUNC(_id) {
		EVAL(_id)
	}
}
OnAnchorSelectEx
{
	_id = reference[1]
	//アンカーのIDの冒頭に「http://〜」があればWebサイトを開く。
	//これを入れておくとRSS表示時に記事タイトルクリックでURLジャンプできます。
	if RE_MATCH(_id, 'http://.+') {
		_url = AYATEMPLATE.EscapeText(_id)
		"\C\j[%(_url)] \e"
	//それ以外はIDと同じ名前のイベントへジャンプ
	} elseif ISFUNC(_id) {
		EVAL(_id)
	}
}

//------------------------------------------------------------------------------

//選択肢タイムアウト（省略可）（コメントアウト中）
//選択肢放置で発生。使い方によってはうざったくなるので注意。
/*
OnChoiceTimeout
{
	"\1\s[10]\0\s[0]選択肢がタイムアウトしました。\e"
}
*/

//---------------------------------------------------------
//入力ボックス
//---------------------------------------------------------

//InputBoxに入力した
//IDと同じ名前のイベントにジャンプ
OnUserInput
{
	_cmd = reference[0] + "(%(CHR(0x22))" + reference[1] + "%(CHR(0x22)))"
	//"%(_cmd)"
	//--
	if reference[1] == "timeout" {
		"タイムアウトしました\e"
	}
	else {
		EVAL(_cmd)
	}
}

//---------------------------------------------------------
//ロード/アンロードイベント（必要なければ削除可）
//---------------------------------------------------------
//ゴーストの起動終了、SHIORIリロード等で発生

//ゴーストのロード
//起動毎の変数の初期化などはここで
OnGhostLoad
{
}

//ゴーストのアンロード
//終了毎変数の削除などはここで
OnGhostUnload
{
	//なで反応で使用する変数の削除
	ERASEVAR('stroke')
	ERASEVAR('prev_reference4')
	ERASEVAR('nade_prev')
	
	//最終終了時刻。後で使うかもしれないので記録（省略可）
	//（長期間起動しなかった時の反応等に）
	LastCloseTime	= GETTIME
}

//---------------------------------------------------------
//起動/終了
//---------------------------------------------------------

//初回起動（自ゴースト起動）
OnFirstBoot
{
	//変数の初期化
	username	= "ユーザー"
	//初回起動時刻。後で使うかもしれないので記録しておく（省略可）
	FirstBootTime	= GETTIME

	//Vanishカウントを見て、真の初回か否かを判定する
	if reference[0] == 0
	{
	"\1\s[10]\0\s[5]\_v[voice\4watasizabitan.mp3]わたし、ざびたん。\nよろしくね。\w[3000]\s[0]\e"
	}
	else
	{
	"\1\s[10]\0\s[5]\_v[voice\4watasizabitan.mp3]わたし、ざびたん。\nよろしくね。\w[3000]\s[0]\e"
	}
}

//起動
OnBoot
{
	"\1\s[10]\0\s[5]\_v[voice\4watasizabitan.mp3]わたし、ざびたん。\nよろしくね。\w[3000]\s[0]\e"
}

//終了
//必ず最後に\-を入れること（記述がないとベースウェアによっては終了できなくなる）
OnClose
{
	"\1\s[10]\0\s[5]またね。\w9\w9\w9\-\e"
}

//---------------------------------------------------------
//交代
//---------------------------------------------------------

//他のゴーストから交代（自ゴースト起動）
OnGhostChanged
{
	//''内にこのゴーストのsakura.nameを入れる
	if reference[0] == 'メインキャラの名前' {
	"\1\s[10]\0\s[0]再読み込みしました。\e"
	}

	else {
	//EscapeAllTagsはさくらスクリプトエスケープタグ
	//何が含まれているか予想できないテキストのバルーン表示時は入れておいたほうが無難
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんから交代しました。\e"
	}
}
//他のゴーストへ交代（自ゴースト終了）
OnGhostChanging
{
	//''内にこのゴーストのsakura.nameを入れる
	if reference[0] == 'メインキャラの名前' {
	"\1\s[10]\0\s[0]再読み込みします。\w9\e"
	}

	else {
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんへ交代します。\w9\w9\w9\e"
	}
}

//---------------------------------------------------------
//複数起動関係イベント（SSP専用）（省略可）
//---------------------------------------------------------

//他のゴーストから呼び出された（省略するとOnBoot）（自ゴースト起動）
OnGhostCalled
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんから呼び出されました。\e"
}

//他のゴーストを呼び出す
OnGhostCalling
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんを呼びます。\e"
}

//呼び出したゴーストが起動スクリプトを完了
OnGhostCallComplete
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんを呼び終えました。\e"
}

//複数起動中他のゴーストが終了
OnOtherGhostClosed
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんが去りました。\e"
}

//複数起動中他のゴーストが交代
OnOtherGhostChanged
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんが去り、%(EscapeAllTags(reference[1]))さんに交代しました。\e"
}

//複数起動中他のゴーストが消滅
OnOtherGhostVanish
{
	"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))さんが消滅しました。\e"
}

//---------------------------------------------------------
//消滅イベント（省略可）
//---------------------------------------------------------
//SAORI終了処理など終了時必ず何かさせたい時はOnVanishedでも実行すること
//（省略すると他のイベントで代用されない）

//消滅指示
OnVanishSelecting
{
	"\1\s[10]\0\s[0]ゴーストアンインストール指示。\e"
}

//消滅中止（確認ダイアログでNO）
OnVanishCancel
{
	"\1\s[10]\0\s[0]ゴーストアンインストール中止。\e"
}

//ダブルクリックで消滅中止
OnVanishButtonHold
{
	"\1\s[10]\0\s[0]ダブルクリックでゴーストアンインストール中止。\e"
}

//消滅実行（確認ダイアログでYES）（消滅後は他のゴーストにランダム交代）
OnVanishSelected
{
	"\1\s[10]\0\s[0]ゴーストアンインストール実行。\w9\w9\w9\e"
}

//他のゴーストが消滅し自分に交代（省略するとOnGhostChanged）（自ゴースト起動）
OnVanished
{
	//ベースウェアによってはreference[0]の中身が空の事もあるようなので
	if reference[0] == "" {
		"\1\s[10]\0\s[0]ゴースト消滅より交代。\e"
	}

	else {
		//reference[0]はsakura.name
		"\1\s[10]\0\s[0]%(EscapeAllTags(reference[0]))の消滅より交代。\e"
	}
}

//---------------------------------------------------------
//ランダムトーク（省略可）
//---------------------------------------------------------
//ランダムトーク頻度初期値はyaya_variable.cfgのTALK_INTERVAL（秒単位）
//→3600秒に設定しています。（sechiro)

OnAITalk{OnAiTalk}

OnAiTalk
{
	//通常のランダムトーク、ただしチェイン中はチェイントーク
	if CHAIN.IDName == "" {
	"\1\s[10]\0\s[422]\_v[voice\4sukosikurainara.mp3]す、少しくらいならあんたのために見張っててあげる。\w[3000]\n\s[7]でも、\w[200]何かあったらすぐ呼ぶから駆けつけてよね！\w[3500]\s[0]\e"
	}
	else {
		ChainTalk
	}
}

//高速化対策（ゴースト「はろーYAYAわーるど」より転載）
RandomTalk
{
	TOSTR(EVAL(CHR(0x22)+RandomTalkEx()+CHR(0x22)))
}

//ここにランダムトークを書く（「 : nonoverlap」で重複回避）
//ここのみ常に ' ' で括って書いてください。
//上のRandomTalkの中身で%( )を展開していますので、" "を使わなくてもOKです。


RandomTalkEx : nonoverlap {

	'\1\s[10]\0\s[422]\_v[voice\4sukosikurainara.mp3]す、少しくらいならあんたのために見張っててあげる。\w[3000]\n\s[7]でも、\w[200]何かあったらすぐ呼ぶから駆けつけてよね！\w[3500]\s[0]\e'

}


//---------------------------------------------------------
//マウスダブルクリック（省略可）
//---------------------------------------------------------
//当たり判定識別子に半角空白など関数名に使えない文字を使用しているとこのEVALを使用した方法は使えません。
//他のマウス系イベントも同様。

//クリックされたら「MouseDoubleClick_(キャラ番号)(当たり判定識別子)」イベントにジャンプ
OnMouseDoubleClick{EVAL("MouseDoubleClick_%(reference[3])%(reference[4])")}

//メインキャラの頭をダブルクリック
MouseDoubleClick_0Head
{
	"\1\s[10]\0\s[420]いい？ホスト名とディレクトリは指さし確認、\n\w[100]コマンドも叩く前に指さし確認。\w[100]これは絶対よ？\n\n\w[500]トラブル対応でもミスは許されないんだから、\w[100]気を引き締めてね！\w[3000]\s[0]\e"
	"\1\s[10]\0\s[100]コンピュータはね、\w[100]生きてるの。\n\w[500]ネットワークも、\w[100]生きてるの。\n\w[500]あなたはね、\w[100]わたしたちを最後まで生かす義務があるの。\n\n\w[500]・\w[1000]・\w[1000]・\w[1000]最後まで、\w[500]見捨てないでね？\w[3000]\s[0]\e"
	"\1\s[10]\0\s[201]え、\w[500]、\w[500]、\w[500]、\w[500]。\w[3000]\n\s[109]い、\w[100]いいわよ！\w[100]ダブルチェックでもログ確認でも一緒にやってあげるわよ！！！\w[100]\nぜっっったいに文句は言わせないんだからね！！！\w[3000]\s[0]\e"
	"\1\s[10]\0\s[422]\_v[voice\4sukosikurainara.mp3]す、少しくらいならあんたのために見張っててあげる。\w[3000]\n\s[7]でも、\w[200]何かあったらすぐ呼ぶから駆けつけてよね！\w[3500]\s[0]\e"
	"\1\s[10]\0\s[1200]\_v[voice\4atamaonadeta.mp3]頭をなでたぐらいで、わたしがよろこぶとでも思ってるの。\w[3000]\s[0]\e"
	"\1\s[10]\0\s[1110]\_v[voice\4unyanandemo.mp3]うにゃっ！？\n\n\w[1500]\s[1400]…なっ、なんでもないわよ。\w[3000]\s[0]\e"
}
MouseDoubleClick_0Chest
{
	"\1\s[10]\0\s[9]\_v[voice\4hentaidohentai.mp3]へっ、変態！！\nど変態！！！\w[3000]\s[0]\e"
}
MouseDoubleClick_0Absolute
{
	"\1\s[10]\0\s[9]\_v[voice\4hentaidohentai.mp3]へっ、変態！！\nど変態！！！\w[3000]\s[0]\e"
}

//メインキャラの当たり判定が無い部分をダブルクリック
MouseDoubleClick_0
{
	OpenMenu
}

//メニューを開く、\qの第2引数の名前の関数がOnChoiceSelectのEVALで実行される。
OpenMenu
{
	"\0\s[0]何か用かしら？\n"
	--
	"/
	○\q[時間を知りたい,MenuDate]\n/
	○\q[サーバの起動時間を知りたい,MenuUptime]\n/
	○\q[実行コマンドを指定する,MenuUserInput]\n/
	◯\q[ニコニコ動画のSSL証明書期限を知りたい,MenuGetNico]\n/
	○\q[サーバ追加,addServer]\n/
	○\q[サーバ削除,delServer]\n/
	"
}


//サーバ設定関連
addServer
{
	"サーバのホスト名を入力してください。\n（Zabbixサーバ上のホスト名と同じものにすること）"
	--
	"\![open,inputbox,setHostname,180000,サーバの設定ホスト名を入力してください。]"
}

setHostname
{
	"ホスト名は、%(_argv[0])です。\n" 
	--
	host_name = _argv[0]
	hostsetting = _argv[0]
	--
	"続いて、サーバのIPアドレスを入力してください。"
	--
	"\![open,inputbox,setIP,180000,ここにサーバのIPアドレスを入力してください。]"
}

setIP
{
	"IPアドレスは、%(_argv[0])です。\n" 
	--
	hostsetting = hostsetting + "," + _argv[0]
	--
	"続いて、SSHの接続先ポート番号を入力してください。"
	--
	"\![open,inputbox,setPort,180000,22]"
}

setPort
{
	"接続先ポートは、%(_argv[0])です。\n" 
	--
	hostsetting = hostsetting + "," + _argv[0]
	--
	"続いて、ログインユーザ名を入力してください。"
	--
	"\![open,inputbox,setUsername,180000,ここにユーザ名を入力してください。]"
}

setUsername
{
	"ユーザ名は、%(_argv[0])です。\n" 
	--
	hostsetting = hostsetting + "," + _argv[0]
	--
	"続いて、パスワードを入力してください。"
	--
	"\![open,inputbox,setPassword,180000,ここにパスワードを入力してください。]"
}

setPassword
{
	"パスワードは、%(_argv[0])です。\n" 
	--
	hostsetting = hostsetting + "," + _argv[0]
	--
	"続いて、サーバにログインするための秘密鍵をファイル名をフルパスで入力してください。\n（秘密鍵がなくてもパスワードログインで使用できますが、セキュリティの観点からRSA鍵の使用を推奨します。）"
	--
	"\![open,inputbox,setPKey,180000,ここに秘密鍵をファイル名をフルパスで入力してください。使用しない場合は空欄としてください。]"
}

setPKey
{
	_keyfile = escapeYen(_argv[0])
	"秘密鍵のファイルは、%(_keyfile)です。\n" 
	--
	hostsetting = hostsetting + "," + _argv[0]
	--
	_result = FOPEN("..\..\zab-script\conf\hostsetting.dat","a")
	if _result == 0 {
		"ファイルオープンに失敗しました\e"
	}
	FWRITE("..\..\zab-script\conf\hostsetting.dat",hostsetting)
	FCLOSE("..\..\zab-script\conf\hostsetting.dat")
	
	_result = FOPEN("..\..\zab-script\conf\hosts.dat","a")
	if _result == 0 {
		"ファイルオープンに失敗しました\e"
	}
	FWRITE("..\..\zab-script\conf\hosts.dat",host_name)
	FCLOSE("..\..\zab-script\conf\hosts.dat")
	host_name = ""
	hostsetting = ""
	--
	"\nホスト設定を追加しました。\e"
}

escapeYen
{
	REPLACE(_argv[0],"\","\\")
}

//コマンド実行
InputCommand
{
	ExecScript(_argv[0])
}

MenuDate{
	ExecScript("date")
}
MenuUptime{
	ExecScript("uptime")
}
MenuUserInput{
	"実行したいコマンドを入力してね。"
	--
	"\![open,inputbox,InputCommand,180000,ここに実行したいコマンドを入力してください。]"
}

//ニコニコ動画のSSL証明書期限
MenuGetNico{
	"\![open,file,zab-script\get_nicovideo_cert.py]\e"
}

//スクリプトログファイルを見る
ViewSSHLog{
	"\![open,file,zab-script\log\ssh4sstp.log]\e"
}

//スクリプト実行本体（これに引数として実行コマンドを渡す）
ExecScript
{
	_result = FOPEN("..\..\zab-script\conf\zabbitan.dat","w")
	if _result == 0 {
		"ファイルオープンに失敗しました\e"
	}
	FWRITE("..\..\zab-script\conf\zabbitan.dat",_argv[0])
	FCLOSE("..\..\zab-script\conf\zabbitan.dat")
	"\![open,file,zab-script\ssh4sstp.py]\e"
}


//メニューからサーバ削除
delServer
{
	_result = FOPEN("..\..\zab-script\conf\hosts.dat","r")
	if _result == 0 {
		"ファイルオープンに失敗しました\e"
	}
	_host_name = FREAD("..\..\zab-script\conf\hosts.dat")
	hostmenu = "どのサーバを削除しますか？\n"
	while _host_name != -1
	{
		hostmenu = hostmenu + "○\q[%(_host_name),OnChoiceSelectEx,ExecDelScript,%(_host_name)]\n"
		_host_name = FREAD("..\..\zab-script\conf\hosts.dat")
	}
	FCLOSE("..\..\zab-script\conf\hosts.dat")
	--
	hostmenu
}

ExecDelScript
{
	_result = FOPEN("..\..\zab-script\conf\zabbitan.dat","w")
	if _result == 0 {
		"ファイルオープンに失敗しました\e"
	}
	FWRITE("..\..\zab-script\conf\zabbitan.dat",reference[1])
	FCLOSE("..\..\zab-script\conf\zabbitan.dat")
	"\![open,file,zab-script\del_server.py]\e"
}

//サブキャラの当たり判定が無い部分をダブルクリック
MouseDoubleClick_1
{
}


//---------------------------------------------------------
//マウス移動（省略可）
//---------------------------------------------------------

OnMouseMove
{
	//なで反応
	//（文Wiki記載「マウス反応を自然なものにする」を改変）
	if reference[4] != "" {

		//----どこかが撫でられている
		if reference[4] == prev_reference4 {
			_nade_interval = systemuptime - nade_prev

			if _nade_interval > 1 {
				//1秒以上間隔が空いたらカウンタをリセット
				stroke = 0

			}
			nade_prev = systemuptime
			stroke++

			//撫でられた量が一定量に達したら「なでられている」と判断
			//（「stroke >= *」の*の値が大きいほど反応が鈍くなる）
			if stroke >= 96 {
				//撫でられた。撫でられた部位を見てトークする
				EVAL("MouseReaction_%(reference[3])%(reference[4])")
				--
				stroke = 0

			}
		}
		else {
			stroke = 0
		}
		prev_reference4 = reference[4]
	}
	else {
		// 定義された部位はどこも撫でられていない
		stroke = 0
	}
}

//メインキャラ頭なで反応トーク
//イベント名は「MouseReaction_(キャラ番号)(当たり判定識別子)」
MouseReaction_0Head
{
	RandomTalk
}

MouseReaction_0Chest
{
	"\1\s[10]\0\s[9]\_v[voice\4hentaidohentai.mp3]へっ、変態！！\nど変態！！！\w[3000]\s[0]\e"
}

MouseReaction_0Absolute
{
	"\1\s[10]\0\s[9]\_v[voice\4hentaidohentai.mp3]へっ、変態！！\nど変態！！！\w[3000]\s[0]\e"
}


//---------------------------------------------------------
//キー入力（省略可）
//---------------------------------------------------------

//キーを押されたら「KeyPress_(キー名称)」イベントにジャンプ
OnKeyPress{EVAL("KeyPress_%(reference[0])")}

//キー反応例（コメントアウト中）
/*
KeyPress_a {
	"\1\s[10]\0\s[0]「A」キーが押されました。\e"
}
*/

//---------------------------------------------------------
//最小化（省略可）
//---------------------------------------------------------

//最小化指示（SSP用）（コメントアウト中）
//※注：ユーザーの邪魔になる可能性有り
/*
OnWindowStateMinimize {
	"\1\s[10]\0\s[0]最小化します。\e"
}
*/

//最小化解除
OnWindowStateRestore {
	"\1\s[10]\0\s[400]\_v[voice\4iyan.mp3]いやん。\nすぐ駆けつけてくれるって言ったじゃないの！\n\n\w[3000]\s[420]…むぅ。\n\w[1500]\s[1200]でも、\w[1500]来てくれてありがとう。\n\w[2000]これでも感謝してるんだからね。\w[3000]\s[0]\e"
}

//---------------------------------------------------------
//時間経過イベント
//---------------------------------------------------------

//1秒に一度呼ばれる。削除するとAIトークイベントが発生しなくなるため、
//使用しない場合でも中身が空のものを置くこと。
OnSecondChange
{
MikireKasanari
}

//多少の間を空けてから発生する見切れ・重なりイベント（省略可）
//（文Wiki記載「見切れ・重なり反応を里々風に」を改変）
/*MikireKasanari
{
	//見切れ反応（メインキャラ見切れ5秒後）
	if reference[1] && !mikireflag {
		mikiretimer--
		if mikiretimer < 1 {
			mikireflag = 1
			"\1\s[10]\0\s[0]見切れ反応。\e"
		}
	}
	else {
		mikiretimer = 5
	}

	//見切れ終了反応（見切れ終了直後）
	if mikireflag && !reference[1] {
		mikireflag = 0
		"\1\s[10]\0\s[0]見切れ終了。\e"
	}

	//重なり反応（メインとサブキャラの重なり5秒後）
	elseif !kasanariflag && reference[2] {

		if ISVAR('kasanaritimer') == 0 {
			kasanaritimer = 5
		}

		kasanaritimer--
		if kasanaritimer < 1 {
			kasanariflag = 1
			"\1\s[10]\0\s[0]重なり反応。\e"
		}
	}
	//重なり終了反応（重なり終了直後）
	elseif kasanariflag && !reference[2] {
		kasanariflag = 0
		kasanaritimer = 5
		"\1\s[10]\0\s[0]重なり終了。\e"
	}
	else {
		kasanaritimer = 5
	}
}
*/
//1分に一度呼ばれる（省略可）
OnMinuteChange
{
}

//---------------------------------------------------------
//シェル変更（省略可）
//---------------------------------------------------------

//シェル変更開始
OnShellChanging {
	"\1\s[10]\0\s[0]シェルを『%(EscapeAllTags(reference[0]))』に変更します。\e"
}

//シェル変更完了
OnShellChanged {
	"\1\s[10]\0\s[0]シェルを『%(EscapeAllTags(reference[0]))』に変更しました。\e"
}

//---------------------------------------------------------
//一定時間同じサーフェスが続いたら戻す
//---------------------------------------------------------

OnSurfaceRestore { "\1\s[10]\0\s[0]\e" }

//---------------------------------------------------------
//ネットワーク状況（省略可）
//---------------------------------------------------------

//相手サーバが時間内に応答しなかった（コメントアウト中）
/*
OnNetworkHeavy
{
	"\1\s[10]\0\s[0]ネットワーク混雑中。\e"
}
*/
//---------------------------------------------------------
//オーナードローメニューリソース（省略可）
//---------------------------------------------------------

//おすすめサイトボタンキャプション（本体側）
On_sakura.recommendbuttoncaption { "おすすめサイト" }

//おすすめサイトリンク
//1行目 サイトタイトル
//2行目 サイトURL
//3行目 バナーURL（省略可）
//又は\ghost\master\bannerディレクトリ内のバナーファイル名（拡張子はつけない）
//4行目 ジャンプ時のトーク（省略可）
//行の区切りは最後に%(CHR(1))、リンク項目ごとの区切りは%(CHR(2))

On_sakura.recommendsites
{"/
	ZABBIX-JP%(CHR(1))/
	http://www.zabbix.jp/%(CHR(2))/

	ZABBIX 本家%(CHR(1))/
	http://www.zabbix.com/%(CHR(2))/
"}

//ポータルサイトボタンキャプション（本体側）
On_sakura.portalbuttoncaption { "ポータルサイト" }

//ポータルサイトリンク
//記述法はおすすめサイトリンクと同様
On_sakura.portalsites
{"/
	ざびたん基本設計書%(CHR(1))/
	http://www43.atwiki.jp/zabbitan/%(CHR(2))/

	ばぐとら研究所%(CHR(1))/
	http://ssp.shillest.net/%(CHR(2))/
	
	AYAYA/03%(CHR(1))/
	http://emily.shillest.net/ayaya/index.php%(CHR(2))/
	
	Ukadoc Project%(CHR(1))/
	http://ukadoc.googlecode.com/svn/trunk/manual/index.html%(CHR(2))/
"}

//消滅指示ボタン表示切り替え
//	"0"で非表示、それ以外で表示
On_vanishbutton.visible { '1' }

//---------------------------------------------------------
//ネットワーク更新リソース
//---------------------------------------------------------

//ネットワーク更新の基準位置となるURL
//ネットワーク更新有りの場合必ずコメントアウトを外しURL記述
//On_homeurl { "http://......./" }

//ネットワーク更新時ファイル数を1から数える
//MATERIAと同じ0にしておくと無難
On_useorigin1 { '0' }

//---------------------------------------------------------
//他リソース
//---------------------------------------------------------

//sstpなどで%usernameが指定された時使用
On_username {username}

